/* -*-c++-*- VirtualPlanetBuilder - Copyright (C) 1998-2007 Robert Osfield 
 *
 * This library is open source and may be redistributed and/or modified under  
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * OpenSceneGraph Public License for more details.
*/

#ifndef FILECACHE_H
#define FILECACHE_H 1

#include <osgDB/FileUtils>

#include <vpb/FileDetails>

namespace vpb
{

class VPB_EXPORT FileCache : public osg::Object
{
    public:
    
        FileCache();

        /** Copy constructor using CopyOp to manage deep vs shallow copy.*/
        FileCache(const FileCache&,const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY);
        
        META_Object(vpb, FileCache);


        void setFileName(const std::string& filename) { _filename = filename; }
        std::string& getFileName() { return _filename; }
        const std::string& getFileName() const { return _filename; }

        bool read(const std::string& filename);
        bool write(const std::string& filename);

        typedef std::list< osg::ref_ptr<FileDetails> > Variants;
        typedef std::map<std::string, Variants> VariantMap;
        
        void addFileDetails(FileDetails* fd);
        void removeFileDetails(FileDetails* fd);

        std::string getOptimimumFile(const std::string& filename, const SpatialProperties& sp);


    protected:
    
        virtual ~FileCache();
        
        bool readFileDetails(osgDB::Input& fr, bool& itrAdvanced);
        bool writeFileDetails(osgDB::Output& fw, const FileDetails& fd);


        std::string         _filename;
        VariantMap          _variantMap;
        
};

}

#endif
