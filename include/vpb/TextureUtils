/* -*-c++-*- VirtualPlanetBuilder - Copyright (C) 1998-2007 Robert Osfield
 *
 * This library is open source and may be redistributed and/or modified under
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * OpenSceneGraph Public License for more details.
*/

#ifndef VPB_TEXTUREUTILS_H
#define VPB_TEXTUREUTILS_H


#include <vpb/Export>
#include <osg/Texture>
#include <vpb/BuildOptions>

namespace osg
{
class ImageProcessor
{
public:

    enum CompressionMethod
    {
        USE_CPU, /// Use CPU for compression even when GPU compression is available
        USE_GPU  /// Use GPU for compression when available (i.e CUDA), otherwise fallback to CPU
    };

    //Only applies when using NVVT compression.
    enum CompressionQuality
    {
        FASTEST,
        NORMAL,
        PRODUCTION,
        HIGHEST
    };

    virtual void compress(osg::Image& image, osg::Texture::InternalFormatMode compressedFormat, bool generateMipMap, bool resizeToPowerOfTwo, CompressionMethod method, CompressionQuality quality) = 0;
    virtual void generateMipMap(osg::Image& image, bool resizeToPowerOfTwo, CompressionMethod method) = 0;
};

}

namespace vpb
{

extern VPB_EXPORT void compress(osg::State& state, osg::Texture& texture, osg::Texture::InternalFormatMode compressedFormat, bool generateMipMap, bool resizeToPowerOfTwo, vpb::BuildOptions::CompressionMethod method, vpb::BuildOptions::CompressionQuality quality);
extern VPB_EXPORT void generateMipMap(osg::State& state, osg::Texture& texture, bool resizeToPowerOfTwo, vpb::BuildOptions::CompressionMethod method);

}

#endif
